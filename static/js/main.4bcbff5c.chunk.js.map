{"version":3,"sources":["components/values/vaccine.jsx","components/windowSize.js","components/values/cases.jsx","components/values/Paginations.jsx","components/informationCovid.jsx","App.js","reportWebVitals.js","index.js"],"names":["ModalExampleModal","props","React","useState","open","setOpen","console","log","moment","millisecond","items","updated","Modal","closeIcon","onClose","onOpen","trigger","Button","Image","src","flag","Header","Content","image","size","countryInfo","wrapped","Description","left","country","Statistic","Value","cases","active","deaths","recovered","myArray","nameKey","j","length","timeline","Object","keys","search","vaccine","Divider","Actions","color","onClick","getWindowDimensions","window","width","innerWidth","height","innerHeight","MyComponent","error","setError","isLoaded","setIsLoaded","setItems","sumVaccines","useEffect","fetch","then","res","json","result","message","Card","Group","centered","fluid","reverenge","sumVaccine","Label","toDay","map","u","tabToDay","population","Poginations","pageNumbers","i","Math","ceil","totalPosts","postsPerPage","push","Pagination","boundaryRange","defaultActivePage","ellipsisItem","firstItem","lastItem","siblingRange","totalPages","onPageChange","e","paginate","target","attributes","value","MyComponents","Date","format","Promise","all","pageElements","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","currentPage","setCurrentPage","indexOfLastPost","indexOfFirstPost","currentPosts","slice","panes","menuItem","render","totalSize","List","Tab","Segment","number","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4bcbff5c.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Button, Header, Image, Modal, Statistic, Divider } from 'semantic-ui-react'\r\nimport moment from 'moment'\r\n\r\nfunction ModalExampleModal(props) {\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    function search(myArray, nameKey) {\r\n        for (let j = 0; j < myArray.length; j++) {\r\n            if (myArray[j].country === nameKey) {\r\n                return myArray[j].timeline[Object.keys(myArray[j].timeline)[Object.keys(myArray[j].timeline).length - 1]]\r\n            } else if (j === myArray.length - 1) {\r\n                return 'Not Information'\r\n            }\r\n        }\r\n    }\r\n\r\n    console.log(moment().millisecond(props.items.updated))\r\n\r\n    return (\r\n        <Modal\r\n            closeIcon\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            open={open}\r\n            trigger={<Button><Image src={props.flag}></Image></Button>}\r\n        >\r\n            <Modal.Header></Modal.Header>\r\n            <Modal.Content image>\r\n                <Image size='medium' src={props.items.countryInfo.flag} wrapped />\r\n                <Modal.Description left>\r\n                    <Header>{props.items.country}</Header>\r\n                    <Statistic size='mini'>\r\n                        <Statistic.Value>Cases: {props.items.cases}</Statistic.Value>\r\n                        <Statistic.Value>Active: {props.items.active}</Statistic.Value>\r\n                        <Statistic.Value>Deaths: {props.items.deaths}</Statistic.Value>\r\n                        <Statistic.Value>Recovered: {props.items.recovered}</Statistic.Value>\r\n                        <Statistic.Value>Vaccine: {search(props.vaccine, props.items.country)}</Statistic.Value>\r\n                    </Statistic>\r\n                    <Divider />\r\n                </Modal.Description>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button color='black' onClick={() => setOpen(false)}>\r\n                    Nope\r\n        </Button>\r\n            </Modal.Actions>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ModalExampleModal","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Card, Statistic, Segment, Grid } from 'semantic-ui-react'\r\nimport ModalExampleModal from './vaccine'\r\nimport useWindowDimensions from './../windowSize'\r\n\r\nfunction MyComponent(props) {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [items, setItems] = useState([]);\r\n    let sumVaccines = 0;\r\n    let elements = 0;\r\n\r\n\r\n    function sumVaccine(myArray) {\r\n        for (let j = 0; j < myArray.length; j++) {\r\n            sumVaccines = sumVaccines + myArray[j].timeline[Object.keys(myArray[j].timeline)[Object.keys(myArray[j].timeline).length - 1]]\r\n        }\r\n        return sumVaccines\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=30\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setItems(result);\r\n                    setIsLoaded(true);\r\n                },\r\n\r\n                (error) => {\r\n                    setIsLoaded(true);\r\n                    setError(error);\r\n                }\r\n            )\r\n    }, [])\r\n\r\n    if (error) {\r\n        return <div>Ошибка: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n        return <div>Загрузка...</div>;\r\n    } else {\r\n        return (\r\n            <Card.Group centered>\r\n                <Card fluid>\r\n                    <Card.Header>\r\n                        <Statistic size='tiny'>\r\n                            <Statistic.Value>Total Cases: {items[props.cases][Object.keys(items[props.cases])[Object.keys(items[props.cases]).length - 1]]}</Statistic.Value>\r\n                            <Statistic.Value>Total Death: {items[props.deaths][Object.keys(items[props.deaths])[Object.keys(items[props.deaths]).length - 1]]}</Statistic.Value>\r\n                            <Statistic.Value>Total Recovery: {items[props.reverenge][Object.keys(items[props.reverenge])[Object.keys(items[props.reverenge]).length - 1]]}</Statistic.Value>\r\n                            <Statistic.Value>Total Vaccine: {sumVaccine(props.vaccine)}</Statistic.Value>\r\n                        </Statistic>\r\n                    </Card.Header>\r\n                    <Card.Content>\r\n                        <Statistic size='miny'>\r\n                            <Statistic.Label>Date: {props.toDay}</Statistic.Label>\r\n                        </Statistic>\r\n                    </Card.Content>\r\n                </Card>\r\n                { props.items.map(u => {\r\n                    console.log(u.countryInfo)\r\n                    debugger;\r\n                        return (<Card>\r\n                            <Card.Header>\r\n                                <Statistic size='tiny'>\r\n                                    <Statistic.Value>country: {u.country}</Statistic.Value>\r\n                                    <ModalExampleModal flag={u.countryInfo.flag} items={u} vaccine={props.vaccine} />\r\n                                </Statistic>\r\n                            </Card.Header>\r\n                            <Card.Content>\r\n                                <Statistic size='miny'>\r\n                                    <Statistic.Label>{props.cases}: {u[props.cases]}</Statistic.Label>\r\n                                    <Statistic.Label>{props.tabToDay[0]}: {u[props.tabToDay[1]]}</Statistic.Label>\r\n                                    <Statistic.Label>{props.population}: {u[props.population]}</Statistic.Label>\r\n                                </Statistic>\r\n                            </Card.Content>\r\n                        </Card>)\r\n                    }\r\n            )}\r\n            </Card.Group>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyComponent;","import React from 'react';\r\nimport { Pagination } from 'semantic-ui-react'\r\n\r\nconst Poginations = (props) => {\r\n\r\n    const pageNumbers =[]\r\n\r\n    for(let i = 0; i < Math.ceil(props.totalPosts / props.postsPerPage); i++) {\r\n        pageNumbers.push(i)\r\n    }\r\n\r\n    return (\r\n    <div>\r\n        <Pagination\r\n        fluid\r\n        centered\r\n    boundaryRange={0}\r\n    defaultActivePage={1}\r\n    ellipsisItem={null}\r\n    firstItem={1}\r\n    lastItem={pageNumbers.length}\r\n    siblingRange={1}\r\n    totalPages={pageNumbers.length}\r\n    onPageChange={(e) => props.paginate(e.target.attributes.value.value)}\r\n  />\r\n    </div>)\r\n}\r\n\r\nexport default Poginations","import React, { useState, useEffect } from 'react'\r\nimport { Tab, Card, Segment } from 'semantic-ui-react'\r\nimport { Button, Image, List } from 'semantic-ui-react'\r\nimport MyComponent from './values/cases'\r\nimport useWindowDimensions from './windowSize'\r\nimport moment from 'moment'\r\nimport Poginations from './values/Paginations'\r\n\r\n\r\nfunction MyComponents() {\r\n\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [items, setItems] = useState([]);\r\n    let toDay = moment(new Date()).format('l')\r\n\r\n\r\n    useEffect(() => {\r\n        Promise.all([\r\n            fetch(\"https://disease.sh/v3/covid-19/countries\").then(res => res.json()),\r\n            fetch(\"https://disease.sh/v3/covid-19/vaccine/coverage/countries?lastdays=30&fullData=false\").then(res => res.json())\r\n        ]).then(\r\n                ([cases, vaccine]) => {\r\n                    setItems([cases, vaccine]);\r\n                    setIsLoaded(true);\r\n                },\r\n                (error) => {\r\n                    setIsLoaded(true);\r\n                    setError(error);\r\n                }\r\n            )\r\n    }, [])\r\n\r\n    let pageElements = 0;\r\n    let pagesCount;\r\n    const { height, width } = useWindowDimensions();\r\n    if (width > 1203) {\r\n        pageElements = 8;\r\n    } else if (width > 915) {\r\n        pageElements = 6;\r\n    } else if (width > 611) {\r\n        pageElements = 4;\r\n    } else {\r\n        pageElements = 2;\r\n    }\r\n\r\n    \r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [postsPerPage] = useState(pageElements)\r\n    \r\n\r\n    if (error) {\r\n        return <div>Ошибка: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n        return <div>Загрузка...</div>;\r\n    } else {\r\n    \r\n        const indexOfLastPost = currentPage * postsPerPage;\r\n        const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n        const currentPosts = items[0].slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n        const paginate = (number) => setCurrentPage(number)\r\n\r\n        const panes = [\r\n            { menuItem: 'cases', render: () => <div> < MyComponent toDay={toDay} \r\n            items={currentPosts}\r\n            totalSize = {items[0]}\r\n            vaccine={items[1]} \r\n            cases={'cases'}\r\n            deaths = {'deaths'}\r\n            reverenge={'recovered'}\r\n            tabToDay={['items cases Per One Million', \"casesPerOneMillion\"]} \r\n            population={'population'}/> \r\n            </div> },\r\n        ]\r\n\r\n        return (\r\n            <div>\r\n                <List><Tab panes={panes}></Tab></List>\r\n                <Card.Group>\r\n                <Card fluid>\r\n                    <Segment>\r\n                        < Poginations totalPosts={items[0].length} postsPerPage={postsPerPage} paginate={paginate}/>\r\n                    </Segment>\r\n                </Card>\r\n                </Card.Group>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyComponents","import './App.scss';\nimport MyComponents from './components/informationCovid'\nimport React from 'react'\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <MyComponents />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}